// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test NEW_ARTICLE_SNAPSHOT to match with snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <RCTScrollView
                      ListHeaderComponent={
                        <View
                          style={
                            Object {
                              "flex": 1,
                              "paddingHorizontal": 10,
                              "paddingTop": 50,
                            }
                          }
                        >
                          <KeyboardAwareScrollView
                            bounces={false}
                            enableOnAndroid={true}
                          >
                            <Memo(CustomText)
                              bold={true}
                              green={true}
                              style={
                                Object {
                                  "margin": 10,
                                }
                              }
                            >
                              NEW_ARTICLE:CREATE_ARTICLE
                            </Memo(CustomText)>
                            <ForwardRef(CustomTextInputController)
                              control={
                                Object {
                                  "defaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldArrayDefaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldsRef": Object {
                                    "current": Object {
                                      "addTag": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "mount": true,
                                          "name": "addTag",
                                          "ref": Object {
                                            "name": "addTag",
                                            "value": "",
                                          },
                                          "value": "",
                                        },
                                      },
                                      "body": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 5000,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "body",
                                          "ref": Object {
                                            "name": "body",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "value": "",
                                        },
                                      },
                                      "description": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 200,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "description",
                                          "ref": Object {
                                            "name": "description",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                      "tagList": Object {
                                        "_f": Object {
                                          "mount": true,
                                          "name": "tagList",
                                          "ref": Object {
                                            "name": "tagList",
                                            "value": Array [],
                                          },
                                          "value": Array [],
                                        },
                                      },
                                      "title": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 80,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "title",
                                          "ref": Object {
                                            "name": "title",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                    },
                                  },
                                  "formStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": Object {},
                                      "errors": Object {},
                                      "isDirty": false,
                                      "isSubmitSuccessful": false,
                                      "isSubmitted": false,
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "submitCount": 0,
                                      "touchedFields": Object {},
                                    },
                                  },
                                  "getIsDirty": [Function],
                                  "inFieldArrayActionRef": Object {
                                    "current": false,
                                  },
                                  "namesRef": Object {
                                    "current": Object {
                                      "array": Set {},
                                      "mount": Set {
                                        "title",
                                        "description",
                                        "body",
                                        "addTag",
                                        "tagList",
                                      },
                                      "unMount": Set {},
                                      "watch": Set {},
                                      "watchAll": false,
                                    },
                                  },
                                  "readFormStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": true,
                                      "errors": true,
                                      "isDirty": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "touchedFields": true,
                                    },
                                  },
                                  "register": [Function],
                                  "setValues": [Function],
                                  "shouldUnmount": undefined,
                                  "subjectsRef": Object {
                                    "current": Object {
                                      "array": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "control": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "state": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "watch": Ve {
                                        "observers": Array [],
                                      },
                                    },
                                  },
                                  "unregister": [Function],
                                  "updateIsValid": [Function],
                                  "watchInternal": [Function],
                                }
                              }
                              defaultValue=""
                              label="NEW_ARTICLE:TITLE"
                              labelStyle={
                                Object {
                                  "color": "#5CB85C",
                                  "marginVertical": 5,
                                }
                              }
                              maxLength={80}
                              name="title"
                              placeholder="NEW_ARTICLE:PLACEHODER_TITLE"
                              rules={
                                Object {
                                  "maxLength": Object {
                                    "message": "Este campo debe tener como máximo {{count}} caracter",
                                    "value": 80,
                                  },
                                  "minLength": Object {
                                    "message": "Este campo debe tener como mínimo {{count}} caracter",
                                    "value": 5,
                                  },
                                  "required": Object {
                                    "message": "This field is required",
                                    "value": true,
                                  },
                                  "validate": [Function],
                                }
                              }
                              testIDProp="title-input"
                            />
                            <ForwardRef(CustomTextInputController)
                              control={
                                Object {
                                  "defaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldArrayDefaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldsRef": Object {
                                    "current": Object {
                                      "addTag": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "mount": true,
                                          "name": "addTag",
                                          "ref": Object {
                                            "name": "addTag",
                                            "value": "",
                                          },
                                          "value": "",
                                        },
                                      },
                                      "body": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 5000,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "body",
                                          "ref": Object {
                                            "name": "body",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "value": "",
                                        },
                                      },
                                      "description": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 200,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "description",
                                          "ref": Object {
                                            "name": "description",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                      "tagList": Object {
                                        "_f": Object {
                                          "mount": true,
                                          "name": "tagList",
                                          "ref": Object {
                                            "name": "tagList",
                                            "value": Array [],
                                          },
                                          "value": Array [],
                                        },
                                      },
                                      "title": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 80,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "title",
                                          "ref": Object {
                                            "name": "title",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                    },
                                  },
                                  "formStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": Object {},
                                      "errors": Object {},
                                      "isDirty": false,
                                      "isSubmitSuccessful": false,
                                      "isSubmitted": false,
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "submitCount": 0,
                                      "touchedFields": Object {},
                                    },
                                  },
                                  "getIsDirty": [Function],
                                  "inFieldArrayActionRef": Object {
                                    "current": false,
                                  },
                                  "namesRef": Object {
                                    "current": Object {
                                      "array": Set {},
                                      "mount": Set {
                                        "title",
                                        "description",
                                        "body",
                                        "addTag",
                                        "tagList",
                                      },
                                      "unMount": Set {},
                                      "watch": Set {},
                                      "watchAll": false,
                                    },
                                  },
                                  "readFormStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": true,
                                      "errors": true,
                                      "isDirty": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "touchedFields": true,
                                    },
                                  },
                                  "register": [Function],
                                  "setValues": [Function],
                                  "shouldUnmount": undefined,
                                  "subjectsRef": Object {
                                    "current": Object {
                                      "array": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "control": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "state": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "watch": Ve {
                                        "observers": Array [],
                                      },
                                    },
                                  },
                                  "unregister": [Function],
                                  "updateIsValid": [Function],
                                  "watchInternal": [Function],
                                }
                              }
                              defaultValue=""
                              label="NEW_ARTICLE:DESCRIPTION"
                              labelStyle={
                                Object {
                                  "color": "#5CB85C",
                                  "marginVertical": 5,
                                }
                              }
                              maxLength={200}
                              name="description"
                              placeholder="NEW_ARTICLE:PLACEHOLDER_DESCRIPTION"
                              rules={
                                Object {
                                  "maxLength": Object {
                                    "message": "Este campo debe tener como máximo {{count}} caracter",
                                    "value": 200,
                                  },
                                  "minLength": Object {
                                    "message": "Este campo debe tener como mínimo {{count}} caracter",
                                    "value": 5,
                                  },
                                  "required": Object {
                                    "message": "This field is required",
                                    "value": true,
                                  },
                                  "validate": [Function],
                                }
                              }
                              testIDProp="description-input"
                            />
                            <ForwardRef(CustomTextInputController)
                              control={
                                Object {
                                  "defaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldArrayDefaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldsRef": Object {
                                    "current": Object {
                                      "addTag": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "mount": true,
                                          "name": "addTag",
                                          "ref": Object {
                                            "name": "addTag",
                                            "value": "",
                                          },
                                          "value": "",
                                        },
                                      },
                                      "body": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 5000,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "body",
                                          "ref": Object {
                                            "name": "body",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "value": "",
                                        },
                                      },
                                      "description": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 200,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "description",
                                          "ref": Object {
                                            "name": "description",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                      "tagList": Object {
                                        "_f": Object {
                                          "mount": true,
                                          "name": "tagList",
                                          "ref": Object {
                                            "name": "tagList",
                                            "value": Array [],
                                          },
                                          "value": Array [],
                                        },
                                      },
                                      "title": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 80,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "title",
                                          "ref": Object {
                                            "name": "title",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                    },
                                  },
                                  "formStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": Object {},
                                      "errors": Object {},
                                      "isDirty": false,
                                      "isSubmitSuccessful": false,
                                      "isSubmitted": false,
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "submitCount": 0,
                                      "touchedFields": Object {},
                                    },
                                  },
                                  "getIsDirty": [Function],
                                  "inFieldArrayActionRef": Object {
                                    "current": false,
                                  },
                                  "namesRef": Object {
                                    "current": Object {
                                      "array": Set {},
                                      "mount": Set {
                                        "title",
                                        "description",
                                        "body",
                                        "addTag",
                                        "tagList",
                                      },
                                      "unMount": Set {},
                                      "watch": Set {},
                                      "watchAll": false,
                                    },
                                  },
                                  "readFormStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": true,
                                      "errors": true,
                                      "isDirty": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "touchedFields": true,
                                    },
                                  },
                                  "register": [Function],
                                  "setValues": [Function],
                                  "shouldUnmount": undefined,
                                  "subjectsRef": Object {
                                    "current": Object {
                                      "array": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "control": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "state": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "watch": Ve {
                                        "observers": Array [],
                                      },
                                    },
                                  },
                                  "unregister": [Function],
                                  "updateIsValid": [Function],
                                  "watchInternal": [Function],
                                }
                              }
                              defaultValue=""
                              label="NEW_ARTICLE:BODY"
                              labelStyle={
                                Object {
                                  "color": "#5CB85C",
                                  "marginVertical": 5,
                                }
                              }
                              maxLength={5000}
                              multiline={true}
                              name="body"
                              placeholder="NEW_ARTICLE:PLACEHOLDER_BODY"
                              rules={
                                Object {
                                  "maxLength": Object {
                                    "message": "Este campo debe tener como máximo {{count}} caracter",
                                    "value": 5000,
                                  },
                                  "minLength": Object {
                                    "message": "Este campo debe tener como mínimo {{count}} caracter",
                                    "value": 5,
                                  },
                                  "required": Object {
                                    "message": "This field is required",
                                    "value": true,
                                  },
                                }
                              }
                              testIDProp="body-input"
                            />
                            <ForwardRef(CustomTextInputController)
                              control={
                                Object {
                                  "defaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldArrayDefaultValuesRef": Object {
                                    "current": Object {},
                                  },
                                  "fieldsRef": Object {
                                    "current": Object {
                                      "addTag": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "mount": true,
                                          "name": "addTag",
                                          "ref": Object {
                                            "name": "addTag",
                                            "value": "",
                                          },
                                          "value": "",
                                        },
                                      },
                                      "body": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 5000,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "body",
                                          "ref": Object {
                                            "name": "body",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "value": "",
                                        },
                                      },
                                      "description": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 200,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "description",
                                          "ref": Object {
                                            "name": "description",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                      "tagList": Object {
                                        "_f": Object {
                                          "mount": true,
                                          "name": "tagList",
                                          "ref": Object {
                                            "name": "tagList",
                                            "value": Array [],
                                          },
                                          "value": Array [],
                                        },
                                      },
                                      "title": Object {
                                        "_f": Object {
                                          "_c": true,
                                          "maxLength": Object {
                                            "message": "Este campo debe tener como máximo {{count}} caracter",
                                            "value": 80,
                                          },
                                          "minLength": Object {
                                            "message": "Este campo debe tener como mínimo {{count}} caracter",
                                            "value": 5,
                                          },
                                          "mount": true,
                                          "name": "title",
                                          "ref": Object {
                                            "name": "title",
                                            "value": "",
                                          },
                                          "required": Object {
                                            "message": "This field is required",
                                            "value": true,
                                          },
                                          "validate": [Function],
                                          "value": "",
                                        },
                                      },
                                    },
                                  },
                                  "formStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": Object {},
                                      "errors": Object {},
                                      "isDirty": false,
                                      "isSubmitSuccessful": false,
                                      "isSubmitted": false,
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "submitCount": 0,
                                      "touchedFields": Object {},
                                    },
                                  },
                                  "getIsDirty": [Function],
                                  "inFieldArrayActionRef": Object {
                                    "current": false,
                                  },
                                  "namesRef": Object {
                                    "current": Object {
                                      "array": Set {},
                                      "mount": Set {
                                        "title",
                                        "description",
                                        "body",
                                        "addTag",
                                        "tagList",
                                      },
                                      "unMount": Set {},
                                      "watch": Set {},
                                      "watchAll": false,
                                    },
                                  },
                                  "readFormStateRef": Object {
                                    "current": Object {
                                      "dirtyFields": true,
                                      "errors": true,
                                      "isDirty": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "touchedFields": true,
                                    },
                                  },
                                  "register": [Function],
                                  "setValues": [Function],
                                  "shouldUnmount": undefined,
                                  "subjectsRef": Object {
                                    "current": Object {
                                      "array": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "control": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "state": Ve {
                                        "observers": Array [
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                          ke {
                                            "closed": false,
                                            "observer": Object {
                                              "next": [Function],
                                            },
                                          },
                                        ],
                                      },
                                      "watch": Ve {
                                        "observers": Array [],
                                      },
                                    },
                                  },
                                  "unregister": [Function],
                                  "updateIsValid": [Function],
                                  "watchInternal": [Function],
                                }
                              }
                              label="NEW_ARTICLE:TAGS"
                              labelStyle={
                                Object {
                                  "color": "#5CB85C",
                                  "marginVertical": 5,
                                }
                              }
                              name="addTag"
                              onSubmitEditing={[Function]}
                              placeholder="NEW_ARTICLE:PLACHEHOLDER_TAGS"
                              testIDProp="tag-input"
                            />
                            <View
                              style={
                                Object {
                                  "marginBottom": 10,
                                }
                              }
                            >
                              <FlatList
                                columnWrapperStyle={
                                  Object {
                                    "flex": 1,
                                    "justifyContent": "space-around",
                                  }
                                }
                                data={Array []}
                                disableVirtualization={false}
                                horizontal={false}
                                initialNumToRender={10}
                                keyExtractor={[Function]}
                                maxToRenderPerBatch={10}
                                numColumns={2}
                                onEndReachedThreshold={2}
                                removeClippedSubviews={false}
                                renderItem={[Function]}
                                scrollEventThrottle={50}
                                updateCellsBatchingPeriod={50}
                                windowSize={21}
                              />
                            </View>
                            <Memo(CustomButton)
                              onPress={[Function]}
                              primary={true}
                              style={
                                Object {
                                  "marginLeft": "10%",
                                  "marginVertical": 10,
                                  "width": "80%",
                                }
                              }
                              testID="create-article-button"
                              title="NEW_ARTICLE:CREATE_BUTTON"
                            />
                          </KeyboardAwareScrollView>
                        </View>
                      }
                      data={null}
                      disableVirtualization={false}
                      getItem={[Function]}
                      getItemCount={[Function]}
                      horizontal={false}
                      initialNumToRender={10}
                      keyExtractor={[Function]}
                      maxToRenderPerBatch={10}
                      onContentSizeChange={[Function]}
                      onEndReachedThreshold={2}
                      onLayout={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      removeClippedSubviews={false}
                      renderItem={[Function]}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={Array []}
                      updateCellsBatchingPeriod={50}
                      viewabilityConfigCallbackPairs={Array []}
                      windowSize={21}
                    >
                      <View>
                        <View
                          onLayout={[Function]}
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "paddingHorizontal": 10,
                                "paddingTop": 50,
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "#000",
                                    "fontFamily": "Nunito",
                                    "fontSize": 25.142857142857142,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                  Array [
                                    Object {
                                      "color": "#000",
                                      "fontFamily": "Nunito",
                                      "fontSize": 25.142857142857142,
                                      "fontStyle": "normal",
                                      "fontWeight": "700",
                                    },
                                    Object {
                                      "color": "#5CB85C",
                                    },
                                  ],
                                  Object {
                                    "margin": 10,
                                  },
                                ]
                              }
                            >
                              NEW_ARTICLE:CREATE_ARTICLE
                            </Text>
                            <View
                              style={
                                Array [
                                  Object {
                                    "marginBottom": 5,
                                    "padding": 10,
                                  },
                                  false,
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#000",
                                      "fontFamily": "Nunito",
                                      "fontSize": 25.142857142857142,
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                    Array [
                                      Object {
                                        "color": "#A7A7A7",
                                      },
                                      Object {
                                        "fontSize": 22,
                                      },
                                    ],
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "color": "#000",
                                        "fontFamily": "Nunito",
                                        "fontSize": 12,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "marginTop": 5,
                                      },
                                      Object {
                                        "color": "#5CB85C",
                                        "marginVertical": 5,
                                      },
                                    ],
                                  ]
                                }
                              >
                                NEW_ARTICLE:TITLE
                              </Text>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "alignSelf": "center",
                                      "backgroundColor": "#FFF",
                                      "borderBottomWidth": 0,
                                      "borderColor": "#555555",
                                      "borderRadius": 15,
                                      "elevation": 1,
                                      "flexDirection": "row",
                                      "height": 50,
                                      "justifyContent": "space-between",
                                      "paddingHorizontal": 8,
                                      "shadowColor": "#E5E5E5",
                                      "shadowOffset": Object {
                                        "height": 3,
                                        "width": 0,
                                      },
                                      "shadowOpacity": 1,
                                    },
                                    Object {},
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <TextInput
                                  allowFontScaling={false}
                                  autoCapitalize="none"
                                  autoCompleteType="off"
                                  autoCorrect={false}
                                  clearButtonMode="never"
                                  editable={true}
                                  keyboardType="default"
                                  maxLength={80}
                                  multiline={false}
                                  name="title"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  placeholder="NEW_ARTICLE:PLACEHODER_TITLE"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  style={
                                    Array [
                                      Object {
                                        "color": "#555555",
                                        "fontFamily": "Nunito",
                                        "fontSize": 14,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "margin": 0,
                                        "padding": 0,
                                      },
                                      Object {
                                        "flex": 1,
                                      },
                                      undefined,
                                      undefined,
                                    ]
                                  }
                                  testID="title-input"
                                  underlineColorAndroid="transparent"
                                  value=""
                                />
                              </View>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 15,
                                      "marginTop": 3,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "marginBottom": 5,
                                    "padding": 10,
                                  },
                                  false,
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#000",
                                      "fontFamily": "Nunito",
                                      "fontSize": 25.142857142857142,
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                    Array [
                                      Object {
                                        "color": "#A7A7A7",
                                      },
                                      Object {
                                        "fontSize": 22,
                                      },
                                    ],
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "color": "#000",
                                        "fontFamily": "Nunito",
                                        "fontSize": 12,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "marginTop": 5,
                                      },
                                      Object {
                                        "color": "#5CB85C",
                                        "marginVertical": 5,
                                      },
                                    ],
                                  ]
                                }
                              >
                                NEW_ARTICLE:DESCRIPTION
                              </Text>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "alignSelf": "center",
                                      "backgroundColor": "#FFF",
                                      "borderBottomWidth": 0,
                                      "borderColor": "#555555",
                                      "borderRadius": 15,
                                      "elevation": 1,
                                      "flexDirection": "row",
                                      "height": 50,
                                      "justifyContent": "space-between",
                                      "paddingHorizontal": 8,
                                      "shadowColor": "#E5E5E5",
                                      "shadowOffset": Object {
                                        "height": 3,
                                        "width": 0,
                                      },
                                      "shadowOpacity": 1,
                                    },
                                    Object {},
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <TextInput
                                  allowFontScaling={false}
                                  autoCapitalize="none"
                                  autoCompleteType="off"
                                  autoCorrect={false}
                                  clearButtonMode="never"
                                  editable={true}
                                  keyboardType="default"
                                  maxLength={200}
                                  multiline={false}
                                  name="description"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  placeholder="NEW_ARTICLE:PLACEHOLDER_DESCRIPTION"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  style={
                                    Array [
                                      Object {
                                        "color": "#555555",
                                        "fontFamily": "Nunito",
                                        "fontSize": 14,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "margin": 0,
                                        "padding": 0,
                                      },
                                      Object {
                                        "flex": 1,
                                      },
                                      undefined,
                                      undefined,
                                    ]
                                  }
                                  testID="description-input"
                                  underlineColorAndroid="transparent"
                                  value=""
                                />
                              </View>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 15,
                                      "marginTop": 3,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "marginBottom": 5,
                                    "padding": 10,
                                  },
                                  false,
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#000",
                                      "fontFamily": "Nunito",
                                      "fontSize": 25.142857142857142,
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                    Array [
                                      Object {
                                        "color": "#A7A7A7",
                                      },
                                      Object {
                                        "fontSize": 22,
                                      },
                                    ],
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "color": "#000",
                                        "fontFamily": "Nunito",
                                        "fontSize": 12,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "marginTop": 5,
                                      },
                                      Object {
                                        "color": "#5CB85C",
                                        "marginVertical": 5,
                                      },
                                    ],
                                  ]
                                }
                              >
                                NEW_ARTICLE:BODY
                              </Text>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "#FFF",
                                      "borderRadius": 15,
                                      "elevation": 1,
                                      "height": 75,
                                      "paddingHorizontal": 5,
                                      "shadowColor": "#E5E5E5",
                                      "shadowOffset": Object {
                                        "height": 3,
                                        "width": 0,
                                      },
                                      "shadowOpacity": 1,
                                    },
                                    Object {},
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <TextInput
                                  allowFontScaling={false}
                                  autoCapitalize="none"
                                  autoCompleteType="off"
                                  autoCorrect={false}
                                  clearButtonMode="never"
                                  editable={true}
                                  keyboardType="default"
                                  maxLength={5000}
                                  multiline={true}
                                  name="body"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  placeholder="NEW_ARTICLE:PLACEHOLDER_BODY"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  style={
                                    Array [
                                      Object {
                                        "color": "#555555",
                                        "fontFamily": "Nunito",
                                        "fontSize": 14,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "margin": 0,
                                        "padding": 0,
                                      },
                                      false,
                                      undefined,
                                      undefined,
                                    ]
                                  }
                                  testID="body-input"
                                  underlineColorAndroid="transparent"
                                  value=""
                                />
                              </View>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 15,
                                      "marginTop": 3,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "marginBottom": 5,
                                    "padding": 10,
                                  },
                                  false,
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#000",
                                      "fontFamily": "Nunito",
                                      "fontSize": 25.142857142857142,
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                    Array [
                                      Object {
                                        "color": "#A7A7A7",
                                      },
                                      Object {
                                        "fontSize": 22,
                                      },
                                    ],
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "color": "#000",
                                        "fontFamily": "Nunito",
                                        "fontSize": 12,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "marginTop": 5,
                                      },
                                      Object {
                                        "color": "#5CB85C",
                                        "marginVertical": 5,
                                      },
                                    ],
                                  ]
                                }
                              >
                                NEW_ARTICLE:TAGS
                              </Text>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "alignSelf": "center",
                                      "backgroundColor": "#FFF",
                                      "borderBottomWidth": 0,
                                      "borderColor": "#555555",
                                      "borderRadius": 15,
                                      "elevation": 1,
                                      "flexDirection": "row",
                                      "height": 50,
                                      "justifyContent": "space-between",
                                      "paddingHorizontal": 8,
                                      "shadowColor": "#E5E5E5",
                                      "shadowOffset": Object {
                                        "height": 3,
                                        "width": 0,
                                      },
                                      "shadowOpacity": 1,
                                    },
                                    Object {},
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <TextInput
                                  allowFontScaling={false}
                                  autoCapitalize="none"
                                  autoCompleteType="off"
                                  autoCorrect={false}
                                  clearButtonMode="never"
                                  editable={true}
                                  keyboardType="default"
                                  multiline={false}
                                  name="addTag"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="NEW_ARTICLE:PLACHEHOLDER_TAGS"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  style={
                                    Array [
                                      Object {
                                        "color": "#555555",
                                        "fontFamily": "Nunito",
                                        "fontSize": 14,
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                        "margin": 0,
                                        "padding": 0,
                                      },
                                      Object {
                                        "flex": 1,
                                      },
                                      undefined,
                                      undefined,
                                    ]
                                  }
                                  testID="tag-input"
                                  underlineColorAndroid="transparent"
                                  value=""
                                />
                              </View>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 15,
                                      "marginTop": 3,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                            <View
                              style={
                                Object {
                                  "marginBottom": 10,
                                }
                              }
                            >
                              <View
                                data={Array []}
                                disableVirtualization={false}
                                getItem={[Function]}
                                getItemCount={[Function]}
                                horizontal={false}
                                initialNumToRender={10}
                                keyExtractor={[Function]}
                                maxToRenderPerBatch={10}
                                onContentSizeChange={[Function]}
                                onEndReachedThreshold={2}
                                onLayout={[Function]}
                                onMomentumScrollEnd={[Function]}
                                onScroll={[Function]}
                                onScrollBeginDrag={[Function]}
                                onScrollEndDrag={[Function]}
                                removeClippedSubviews={false}
                                renderItem={[Function]}
                                scrollEventThrottle={50}
                                stickyHeaderIndices={Array []}
                                updateCellsBatchingPeriod={50}
                                viewabilityConfigCallbackPairs={Array []}
                                windowSize={21}
                              />
                            </View>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#5CB85C",
                                  "borderColor": "#FFF",
                                  "borderRadius": 25,
                                  "borderWidth": 0,
                                  "flexDirection": "row",
                                  "justifyContent": "center",
                                  "marginLeft": "10%",
                                  "marginTop": 5,
                                  "marginVertical": 10,
                                  "opacity": 1,
                                  "padding": 10,
                                  "width": "80%",
                                }
                              }
                              testID="create-article-button"
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#000",
                                      "fontFamily": "Nunito",
                                      "fontSize": 25.142857142857142,
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                    Array [
                                      Object {
                                        "color": "#000",
                                        "fontFamily": "Nunito",
                                        "fontSize": 25.142857142857142,
                                        "fontStyle": "normal",
                                        "fontWeight": "700",
                                      },
                                      Object {
                                        "color": "#FFF",
                                      },
                                    ],
                                    Array [
                                      Array [],
                                      undefined,
                                      Object {
                                        "color": "#FFF",
                                      },
                                    ],
                                  ]
                                }
                              >
                                NEW_ARTICLE:CREATE_BUTTON
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
